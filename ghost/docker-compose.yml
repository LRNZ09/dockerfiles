version: '3.4'

services:

  ghost:
    deploy:
      labels: {
        traefik.docker.network: traefik_default,
        traefik.frontend.rule: 'Host: blog.lrnz09.me',
        traefik.frontend.rule: 'Host: blog.lrnz09.me',
        traefik.port: 2368
      }
      # restart_policy: {condition: on-failure, delay: 5s, max_attempts: 3, window: 10s}
      # update_config: {delay: 10s, failure_action: rollback, order: start-first, parallelism: 2}
      replicas: 2
    entrypoint: /tmp/docker-entrypoint.sh
    image: ghost:alpine
    networks: [default, traefik_default]
    secrets: [ghost_mailgun_pass, ghost_percona_pass]
    volumes: [
      './config.json:/var/lib/ghost/config.json',
      './content:/var/lib/ghost/content',
      './docker-entrypoint.sh:/tmp/docker-entrypoint.sh',
    ]

  percona:
    image: percona
    environment: {
      MYSQL_USER: lrnz09,
      MYSQL_PASSWORD_FILE: /run/secrets/ghost_percona_pass,
      MYSQL_DATABASE: ghost,
      MYSQL_RANDOM_ROOT_PASSWORD: 'true',
    }
    volumes: ['./percona:/var/lib/mysql']
    secrets: [ghost_percona_pass]

  # adminer:
  #   image: adminer
  #   deploy:
  #     labels: {
  #       traefik.docker.network: traefik_default,
  #       traefik.frontend.rule: 'Host: adminer.lrnz09.me',
  #       traefik.port: 8080
  #     }
  #   networks: [default, traefik_default]

networks:

  traefik_default:
    external: true

secrets:

  ghost_mailgun_pass:
    external: true

  ghost_percona_pass:
    external: true
